{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["Button","props","href","React","createElement","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","ErrorModal","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","initialInputState","initialValue","initialValid","inputState","dispatch","useReducer","id","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","pickImageHandler","click","NewPlace","auth","useContext","AuthContext","inputHandler","title","description","address","image","history","useHistory","formData","FormData","append","Authorization","token","LoadingSpinner","asOverlay"],"mappings":"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","file":"static/js/4.f0ab9659.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\n// import classes from \"./ErrorModal.module.css\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        //responseData refer to :res.status(201).json({user: createdUser.toObj...})\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach((abortCtrl) => {\n        abortCtrl.abort();\n      });\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport \"./Input.css\";\nimport { validate } from \"../util/validators\";\n\nfunction inputReducer(state, action) {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return { ...state, isTouched: true };\n    default:\n      return state;\n  }\n}\n\nfunction Input(props) {\n  const initialInputState = {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid,\n  };\n\n  const [inputState, dispatch] = useReducer(inputReducer, initialInputState);\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = (event) => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    // to check if isValid is modified\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      // in state.inputs there are 'title' and 'description'\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction useForm(initialInputs, initialFormValidity) {\n  // initialState contains inputs and isValid\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback(\n    (id, value, isValid) =>\n      dispatch({\n        type: \"INPUT_CHANGE\",\n        inputId: id,\n        value: value,\n        isValid: isValid,\n      }),\n    []\n  );\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n}\n\nexport default useForm;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport \"./ImageUpload.css\";\nimport Button from \"./Button\";\n\nfunction ImageUpload(props) {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState();\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length !== 0) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      fileIsValid = setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        // accept is a default attribute for inputs of type 'file'\n        accept=\".jpg, .jpeg, .png\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n\nexport default ImageUpload;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./PlaceForm.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/components/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\nfunction NewPlace() {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: { value: \"\", isValid: false },\n      description: { value: \"\", isValid: false },\n      address: { value: \"\", isValid: false },\n      image: { value: null, isValid: false },\n    },\n    false\n  );\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      // Redirect user to starting page\n      history.push(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <ImageUpload\n          center\n          // id key must match with 'image' at line 25\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image\"\n        />\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n}\n\nexport default NewPlace;\n"],"sourceRoot":""}