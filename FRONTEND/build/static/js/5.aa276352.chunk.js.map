{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["Button","props","href","React","createElement","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","ErrorModal","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","initialInputState","initialValue","initialValid","inputState","dispatch","useReducer","id","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","placeId","useParams","loadedPlace","setLoadedPlace","history","useHistory","inputHandler","setFormData","title","description","place","console","log","fetchPlace","LoadingSpinner","JSON","stringify","Authorization","token","userId"],"mappings":"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","file":"static/js/5.aa276352.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\n// import classes from \"./ErrorModal.module.css\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        //responseData refer to :res.status(201).json({user: createdUser.toObj...})\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach((abortCtrl) => {\n        abortCtrl.abort();\n      });\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport \"./Input.css\";\nimport { validate } from \"../util/validators\";\n\nfunction inputReducer(state, action) {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return { ...state, isTouched: true };\n    default:\n      return state;\n  }\n}\n\nfunction Input(props) {\n  const initialInputState = {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid,\n  };\n\n  const [inputState, dispatch] = useReducer(inputReducer, initialInputState);\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = (event) => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n}\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    // to check if isValid is modified\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      // in state.inputs there are 'title' and 'description'\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction useForm(initialInputs, initialFormValidity) {\n  // initialState contains inputs and isValid\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback(\n    (id, value, isValid) =>\n      dispatch({\n        type: \"INPUT_CHANGE\",\n        inputId: id,\n        value: value,\n        isValid: isValid,\n      }),\n    []\n  );\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n}\n\nexport default useForm;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport \"./PlaceForm.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/components/util/validators\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\n// const DUMMY_PLACES = [\n//   {\n//     id: \"p1\",\n//     title: \"Empire State Building\",\n//     description: \"One of the most famous sky scrapers in the world!\",\n//     imageUrl:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg\",\n//     address: \"20 W 34th St, New York, NY 10001\",\n//     location: {\n//       lat: 40.7484405,\n//       lng: -73.9878584,\n//     },\n//     creator: \"u1\",\n//   },\n//   {\n//     id: \"p2\",\n//     title: \"Emp. State Building\",\n//     description: \"One of the most famous sky scrapers in the world!\",\n//     imageUrl:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg\",\n//     address: \"20 W 34th St, New York, NY 10001\",\n//     location: {\n//       lat: 40.7484405,\n//       lng: -73.9878584,\n//     },\n//     creator: \"u2\",\n//   },\n// ];\n\nfunction UpdatePlace() {\n  const auth = useContext(AuthContext);\n  const { placeId } = useParams();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: { value: \"\", isValid: false },\n      description: { value: \"\", isValid: false },\n    },\n    false\n  );\n\n  // as identifiedPlace will be loaded from backend, use setFormData better to set the form data from backend\n  // const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      history.push(\"/\" + auth.userId + \"/places\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (at least 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default UpdatePlace;\n"],"sourceRoot":""}