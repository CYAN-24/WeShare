{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","React","createElement","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","NavLink","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","drawerIsOpen","setDrawerIsOpen","useState","closeDrawerHandler","Fragment","Link","logoutTimer","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","routes","Switch","Route","path","Redirect","Provider","value","BrowserRouter","Suspense","fallback","render"],"mappings":"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","file":"static/js/main.057df856.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\n// function AuthContext() {\n//   createContext({ isLoggedIn: false, login: () => {}, logout: () => {} });\n// }\n\n// export default AuthContext;\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  token: null,\n  userId: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from \"react\";\n\nimport \"./LoadingSpinner.css\";\n\nconst LoadingSpinner = (props) => {\n  return (\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nfunction Backdrop(props) {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n}\n\nexport default Backdrop;\n","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nfunction MainHeader(props) {\n  return <header className=\"main-header\">{props.children}</header>;\n}\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./NavLinks.css\";\nimport { AuthContext } from \"../../context/auth-context\";\n\nfunction NavLinks(props) {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./SideDrawer.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\nfunction SideDrawer(props) {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n}\n\nexport default SideDrawer;\n","import React from \"react\";\n\nimport \"./MainNavigation.css\";\nimport MainHeader from \"./MainHeader\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\n\nfunction MainNavigation() {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  function openDrawerHandler() {\n    setDrawerIsOpen(true);\n  }\n\n  function closeDrawerHandler() {\n    setDrawerIsOpen(false);\n  }\n\n  return (\n    <React.Fragment>\n      {/* Backdrop是用来关drawer的, drawer开着的时候Backdrop才会出现 */}\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      {/* SideDrawer在openDrawer的时候才会show 'in' transition(参考line 33),否则处于'in' == false */}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">WeShare</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n}\n\nexport default MainNavigation;\n","import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(null);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    // this tokenExpirationDate is diff with useState one\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setTokenExpirationDate(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  // automatically logout when token expired\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      // check if token is valid\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React, { Suspense } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n// import Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        {/* redirect is like 'default' in switch case statement */}\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <BrowserRouter>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner asOverlay />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}